h2. s3backup

s3backup is a collection of utilities to generate automatic cloud backups (scheduled via cron) through Amazon.com's AWS S3 service. The bucket / key naming system is such that multiple machines at multiple locations can be backed up, easily organized, and easily restored.

The suite has been tested on Linux (32-bit) and Windows 7 (64-bit w/ 64-bit Python).

SHA512 encryption via pycrypto ensures all data is secure while off-site. Note: Version 0.5 begins using a hashed password for encryption, so it is incompatible with previous versions.

The file's hash is calculated for eventual verification and incremental backups.

h3. Set up

s3backup requires boto and pycrypto to run -

bq. $ pip install boto<br />$ pip install pycrypto

All system configuration is in config.py - set your AWS access and secret key, directories, and a few other settings.

bq. Set aws_access_key_id and aws_secret_key to your account keys.

If you're installing this on public or psuedo-public computers, create sub-accounts and use those keys for security. Also manage access permissions from AWS - s3backup doesn't yet do this.

bq. Enter your bucket name and machine name.

s3bucket organizes uploads to effectively organize backups from multiple machines across multiple locations. The bucket name must be unique across all of AWS. If you only backup one machine the machine name is unimportant (enter something; I haven't tested it with None.

bq. Next create the backup lists and point the list variables to it - the comments in the code explain this step.

bq. Set the encryption settings.

If you use encryption, set the encryption key. Future versions may hash a password variable for the actual key to guarantee a strong key.

bq. Set the directory to store the archive in.

If you're keeping a local copy of the backup, specify its intended location. Otherwise, it's fine to keep it in /tmp.

Next set a few miscellaneous settings.

bq. compression_method can be one of 'none', 'gz', or 'bz2' (default)<br />Set delete_archive_when_finished to True if you don't want to keep a local copy of the archive.

If you want to upload individual files instead of an archive use s3put.py

h3. Restore

restore.py uses three sub-commands: only full-restore is implemented.
full-restore restores all files in the archive if --force or --force-no-overwrite is given. Otherwise, it prompts for each file (time-consuming for large archives).
